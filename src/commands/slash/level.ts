import { SlashCommandBuilder, ChatInputCommandInteraction, EmbedBuilder } from 'discord.js';
import { getUserLevel, getRequiredXp } from '../../levels/levelManager';

/**
 * T·∫°o thanh ti·∫øn tr√¨nh d·∫°ng text.
 * @param currentXP XP hi·ªán t·∫°i
 * @param requiredXP XP c·∫ßn ƒë·ªÉ l√™n level
 * @param barLength ƒê·ªô d√†i thanh (m·∫∑c ƒë·ªãnh 20)
 * @returns Thanh ti·∫øn tr√¨nh d·∫°ng text (v√≠ d·ª•: `‚ñà‚ñà‚ñà‚ñà‚ñà‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë`)
 */
function createProgressBar(currentXP: number, requiredXP: number, barLength = 20): string {
  const progress = Math.floor((currentXP / requiredXP) * barLength);
  const bar = '‚ñà'.repeat(progress) + '‚ñë'.repeat(barLength - progress);
  return `\`${bar}\``;
}

export const levelSlashCommand = {
  data: new SlashCommandBuilder()
    .setName('level')
    .setDescription('Hi·ªÉn th·ªã c·∫•p ƒë·ªô v√† kinh nghi·ªám c·ªßa b·∫°n ho·∫∑c c·ªßa ng∆∞·ªùi kh√°c.')
    .addUserOption(option =>
      option
        .setName('user')
        .setDescription('Ng∆∞·ªùi d√πng c·∫ßn ki·ªÉm tra c·∫•p ƒë·ªô (n·∫øu kh√¥ng ch·ªçn, ki·ªÉm tra c·ªßa b·∫°n)')
        .setRequired(false)
    ),
  async execute(interaction: ChatInputCommandInteraction) {
    const guild = interaction.guild;
    if (!guild) {
      await interaction.reply({ content: 'L·ªánh n√†y ch·ªâ c√≥ th·ªÉ s·ª≠ d·ª•ng trong server!', ephemeral: true });
      return;
    }

    // L·∫•y ng∆∞·ªùi d√πng t·ª´ option; n·∫øu kh√¥ng c√≥, s·ª≠ d·ª•ng ng∆∞·ªùi g·ªçi l·ªánh
    const targetUser = interaction.options.getUser('user') || interaction.user;
    const { xp, level } = await getUserLevel(guild.id, targetUser.id);
    const required = getRequiredXp(level);
    const progressBar = createProgressBar(xp, required, 20);
    const percent = ((xp / required) * 100).toFixed(1);

    // T·∫°o Embed v·ªõi ti√™u ƒë·ªÅ c√≥ icon trong d·∫•u backticks v√† c√°c field b·∫Øt ƒë·∫ßu b·∫±ng ">"
    const embed = new EmbedBuilder()
      .setColor('#DEA2DD')
      .setTitle('`üèÜ` | Th√¥ng Tin C·∫•p ƒê·ªô')
      .setThumbnail(targetUser.displayAvatarURL({ forceStatic: false, size: 128 }))
      .addFields({
        name: 'C·∫•p ƒê·ªô',
        value:
          `> **C·∫•p**: ${level}\n` +
          `> **XP**: ${xp} / ${required} (${percent}%)\n` +
          `> **Ti·∫øn Tr√¨nh**: ${progressBar}`,
        inline: false,
      })
      .setTimestamp();

    await interaction.reply({ embeds: [embed], ephemeral: false });
  }
};

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.clearCommand = void 0;
const discord_js_1 = require("discord.js");
const config_1 = require("../../config/config");
const database_1 = require("../../database/database");
exports.clearCommand = {
    data: new discord_js_1.SlashCommandBuilder()
        .setName('clear')
        .setDescription('X√≥a s·ªë l∆∞·ª£ng tin nh·∫Øn c·ª• th·ªÉ trong k√™nh hi·ªán t·∫°i.')
        .setDefaultMemberPermissions(discord_js_1.PermissionFlagsBits.ManageMessages)
        .addIntegerOption(option => option.setName('amount')
        .setDescription('S·ªë l∆∞·ª£ng tin nh·∫Øn c·∫ßn x√≥a (t·ªëi ƒëa 100)')
        .setRequired(true)),
    async execute(interaction) {
        if (!interaction.member || !interaction.guild) {
            return interaction.reply({ content: '‚ö† L·ªánh n√†y ch·ªâ c√≥ th·ªÉ ƒë∆∞·ª£c s·ª≠ d·ª•ng trong server.', ephemeral: true });
        }
        // Ki·ªÉm tra quy·ªÅn s·ª≠ d·ª•ng l·ªánh
        if (!(0, config_1.hasPermission)(interaction.member)) {
            return interaction.reply({ content: 'üö´ B·∫°n kh√¥ng c√≥ quy·ªÅn s·ª≠ d·ª•ng l·ªánh n√†y!', ephemeral: true });
        }
        const amount = interaction.options.getInteger('amount', true);
        if (amount <= 0 || amount > 100) {
            return interaction.reply({ content: '‚ö† Vui l√≤ng nh·∫≠p s·ªë l∆∞·ª£ng tin nh·∫Øn c·∫ßn x√≥a (1 - 100).', ephemeral: true });
        }
        try {
            const channel = interaction.channel;
            const messages = await channel.messages.fetch({ limit: amount });
            await channel.bulkDelete(messages, true);
            // L∆∞u log vi ph·∫°m (purge) v√†o database
            await (0, database_1.logInfraction)(interaction.guild.id, interaction.user.id, interaction.user.id, // Ng∆∞·ªùi th·ª±c hi·ªán l√† ch√≠nh m√¨nh
            'purge', `X√≥a ${messages.size} tin nh·∫Øn`);
            await interaction.reply({ content: `‚úÖ ƒê√£ x√≥a ${messages.size} tin nh·∫Øn th√†nh c√¥ng!`, ephemeral: true });
        }
        catch (error) {
            console.error('L·ªói khi x√≥a tin nh·∫Øn:', error);
            interaction.reply({ content: '‚ö† ƒê√£ x·∫£y ra l·ªói khi x√≥a tin nh·∫Øn.', ephemeral: true });
        }
    }
};

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.banCommand = void 0;
const discord_js_1 = require("discord.js");
const config_1 = require("../../config/config");
const database_1 = require("../../database/database");
exports.banCommand = {
    data: new discord_js_1.SlashCommandBuilder()
        .setName('ban')
        .setDescription('C·∫•m m·ªôt ng∆∞·ªùi d√πng kh·ªèi server.')
        .setDefaultMemberPermissions(discord_js_1.PermissionFlagsBits.BanMembers)
        .addUserOption(option => option.setName('user')
        .setDescription('Ng∆∞·ªùi d√πng c·∫ßn b·ªã c·∫•m')
        .setRequired(true))
        .addStringOption(option => option.setName('reason')
        .setDescription('L√Ω do c·∫•m')
        .setRequired(false))
        .addStringOption(option => option.setName('purge')
        .setDescription('S·ªë ng√†y tin nh·∫Øn c·∫ßn b·ªã x√≥a (t·ªëi ƒëa 7 ho·∫∑c "all" ƒë·ªÉ x√≥a t·∫•t c·∫£)')
        .setRequired(false)),
    async execute(interaction) {
        if (!interaction.member || !(interaction.member instanceof discord_js_1.GuildMember)) {
            return interaction.reply({ content: 'üö´ B·∫°n kh√¥ng c√≥ quy·ªÅn s·ª≠ d·ª•ng l·ªánh n√†y!', ephemeral: true });
        }
        if (!(0, config_1.hasPermission)(interaction.member)) {
            return interaction.reply({ content: 'üö´ B·∫°n kh√¥ng c√≥ quy·ªÅn s·ª≠ d·ª•ng l·ªánh n√†y!', ephemeral: true });
        }
        const targetUser = interaction.options.getUser('user');
        const reason = interaction.options.getString('reason') || 'Kh√¥ng c√≥ l√Ω do c·ª• th·ªÉ';
        const purgeOption = interaction.options.getString('purge') || '0';
        const caseId = `MK-${Date.now().toString(36).toUpperCase()}`;
        if (!targetUser) {
            return interaction.reply({ content: '‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y ng∆∞·ªùi d√πng!', ephemeral: true });
        }
        const targetMember = await interaction.guild?.members.fetch(targetUser.id).catch(() => null);
        if (!targetMember) {
            return interaction.reply({ content: '‚ö†Ô∏è Ng∆∞·ªùi d√πng kh√¥ng t·ªìn t·∫°i trong server!', ephemeral: true });
        }
        if (!targetMember.bannable) {
            return interaction.reply({ content: '‚ö†Ô∏è T√¥i kh√¥ng th·ªÉ c·∫•m ng∆∞·ªùi d√πng n√†y!', ephemeral: true });
        }
        if ((0, config_1.hasPermission)(targetMember)) {
            return interaction.reply({ content: '‚ö†Ô∏è B·∫°n kh√¥ng th·ªÉ c·∫•m m·ªôt ng∆∞·ªùi c√≥ quy·ªÅn cao h∆°n ho·∫∑c b·∫±ng b·∫°n!', ephemeral: true });
        }
        let deleteMessageDays = 0;
        if (purgeOption.toLowerCase() === 'all') {
            deleteMessageDays = 7;
        }
        else {
            const days = parseInt(purgeOption);
            if (!isNaN(days) && days > 0 && days <= 7) {
                deleteMessageDays = days;
            }
        }
        try {
            await targetMember.ban({ deleteMessageSeconds: deleteMessageDays * 86400, reason });
            await (0, database_1.logInfraction)(interaction.guild.id, targetUser.id, interaction.user.id, 'ban', reason);
            const embed = new discord_js_1.EmbedBuilder()
                .setColor('#DEA2DD')
                .setTitle('`üî®` X·ª≠ l√Ω vi ph·∫°m - Ban')
                .setDescription(`\n\`üìå\` **Th√¥ng tin vi ph·∫°m**\n> **Ng∆∞·ªùi d√πng:** <@${targetUser.id}>\n> **Ng∆∞·ªùi x·ª≠ l√Ω:** <@${interaction.user.id}>\n> **ID:** \`${caseId}\`\n\n\`‚è∞\` **Th√¥ng tin c·∫•m**\n> **L√Ω do:** ${reason}\n> **Th·ªùi gian:** Vƒ©nh vi·ªÖn\n`)
                .setThumbnail(targetUser.displayAvatarURL())
                .setFooter({ text: `X·ª≠ l√Ω b·ªüi: ${interaction.user.tag}`, iconURL: interaction.user.displayAvatarURL() })
                .setTimestamp();
            await interaction.reply({ embeds: [embed], ephemeral: true });
        }
        catch (error) {
            console.error('L·ªói khi ban:', error);
            return interaction.reply({ content: '‚ö† ƒê√£ x·∫£y ra l·ªói khi c·∫•m ng∆∞·ªùi d√πng.', ephemeral: true });
        }
    }
};

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.userinfoSlashCommand = void 0;
const discord_js_1 = require("discord.js");
const userDatabase_1 = require("../../database/userDatabase"); // L·∫•y d·ªØ li·ªáu user (tr·ª´ level)
const levelManager_1 = require("../../levels/levelManager"); // Import h√†m qu·∫£n l√Ω level
exports.userinfoSlashCommand = {
    data: new discord_js_1.SlashCommandBuilder()
        .setName('userinfo')
        .setDescription('Xem th√¥ng tin c√° nh√¢n c·ªßa b·∫°n ho·∫∑c ng∆∞·ªùi kh√°c (slash)')
        .addUserOption(option => option.setName('target')
        .setDescription('Ng∆∞·ªùi d√πng c·∫ßn xem th√¥ng tin')
        .setRequired(false)),
    async execute(interaction) {
        const targetUser = interaction.options.getUser('target') || interaction.user;
        const member = interaction.guild?.members.cache.get(targetUser.id);
        // L·∫•y d·ªØ li·ªáu user (ch·ªâ l·∫•y money, bank, messages)
        const economyAndMessagesData = await (0, userDatabase_1.getUserData)(interaction.guild.id, targetUser.id);
        // L·∫•y th√¥ng tin level ri√™ng
        const levelData = await (0, levelManager_1.getUserLevel)(interaction.guild.id, targetUser.id);
        if (!targetUser) {
            return interaction.reply({ content: '‚ùå Kh√¥ng t√¨m th·∫•y ng∆∞·ªùi d√πng!', ephemeral: true });
        }
        // L·∫•y danh s√°ch vai tr√≤ v√† x·∫øp theo quy·ªÅn l·ª£i
        // L·∫•y danh s√°ch vai tr√≤ v√† x·∫øp theo quy·ªÅn l·ª£i
        const roles = member?.roles.cache
            .filter(role => role.id !== interaction.guild?.id)
            .sort((a, b) => b.position - a.position)
            .map(role => role.toString()) || [];
        // Embed
        const embed = new discord_js_1.EmbedBuilder()
            .setColor('#DEA2DD')
            .setTitle('‚úèÔ∏è | Th√¥ng tin ng∆∞·ªùi d√πng')
            .setThumbnail(targetUser.displayAvatarURL({ size: 256 }))
            .setFields({
            name: 'üÜî | **Th√¥ng tin chung**',
            value: `> **ID:** ${targetUser.id}\n> **T√™n ng∆∞·ªùi d√πng:** ${targetUser.username}\n> **Tr·∫°ng th√°i:** ${member?.presence?.status || 'Ngo·∫°i tuy·∫øn'}`,
            inline: false
        }, {
            name: '‚è≥ | **Ng√†y t·∫°o & Tham gia**',
            value: `> **T·∫°o t√†i kho·∫£n:** <t:${Math.floor(targetUser.createdTimestamp / 1000)}:F>\n> **Tham gia server:** <t:${Math.floor(member?.joinedTimestamp / 1000)}:F>`,
            inline: false
        }, {
            name: `üç• | **Vai tr√≤ (${roles.length})**`,
            value: roles.length > 0 ? roles.join(', ') : '`Kh√¥ng c√≥ vai tr√≤`',
            inline: false
        }, {
            name: 'üè¶ | **Ti·ªÅn t·ªá & C·∫•p ƒë·ªô**',
            value: `> **Ti·ªÅn:** ${economyAndMessagesData.money.toLocaleString('vi-VN')} VNƒê\n> **Ng√¢n h√†ng:** ${economyAndMessagesData.bank.toLocaleString('vi-VN')} VNƒê\n> **C·∫•p ƒë·ªô:** ${levelData.level}\n> **Tin nh·∫Øn:** ${economyAndMessagesData.messages}`,
            inline: false
        })
            .setFooter({ text: 'MineKeo Network' })
            .setTimestamp();
        await interaction.reply({ embeds: [embed], ephemeral: false });
    },
};
